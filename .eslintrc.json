{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:perfectionist/recommended-natural-legacy",
    "prettier"
  ],
  "plugins": [
    "react",
    "react-native",
    "import",
    "perfectionist",
    "@tanstack/query"
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "rules": {
    "@tanstack/query/exhaustive-deps": "error",
    "react/react-in-jsx-scope": "off",
    "arrow-parens": "off",
    "consistent-return": "off",
    "curly": [
      "error",
      "all"
    ],
    "import/extensions": [
      "error",
      {
        "css": "always",
        "json": "always",
        "scss": "always",
        "svg": "always"
      }
    ],
    "import/no-duplicates": "off",
    "import/order": "off",
    "import/prefer-default-export": "off",
    "max-lines": [
      "error",
      300
    ],
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "no-debugger": "off",
    "no-duplicate-imports": "error",
    "no-empty-pattern": "off",
    "no-nested-ternary": "error",
    "no-undef": "off",
    "no-unused-vars": "off",
    "no-var": "error",
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "next": "return",
        "prev": "*"
      },
      {
        "blankLine": "always",
        "next": "*",
        "prev": [
          "const",
          "let",
          "var"
        ]
      },
      {
        "blankLine": "any",
        "next": [
          "const",
          "let",
          "var"
        ],
        "prev": [
          "const",
          "let",
          "var"
        ]
      }
    ],
    "prefer-const": "error",
    "react/button-has-type": "error",
    "react/display-name": "off",
    "react/jsx-boolean-value": [
      "error"
    ],
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "children": "ignore",
        "propElementValues": "always",
        "props": "always"
      }
    ],
    "react/jsx-fragments": [
      "error"
    ],
    "react/prop-types": "off",
    "react/void-dom-elements-no-children": [
      "error"
    ]
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ],
        "paths": [
          "src"
        ]
      },
      "typescript": {
        "alwaysTryTypes": true
      }
    },
    "react": {
      "version": "detect"
    }
  }
}
